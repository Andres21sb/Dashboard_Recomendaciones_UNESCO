from dash import Dash, dcc, html, Input, Output, dash_table
import pandas as pd

url = 'https://raw.githubusercontent.com/Keynell272/Prueba/main/Modelo%20coma.csv'
df = pd.read_csv(url, delimiter=',')

excluded_columns = ['Pais', 'Nombre de la iniciativa', 'DescripciÃ³n', 'Sitio web', 'Correo contacto']

columns_for_dropdown = [col for col in df.columns if col not in excluded_columns]

columns_to_display = df.columns[:5]

app = Dash(__name__)

app.layout = html.Div([
    html.H1(children='Tabla de Datos', style={'textAlign': 'center'}),

    dcc.Dropdown(
        id='column-dropdown',
        options=[{'label': col, 'value': col} for col in columns_for_dropdown],
        value=columns_for_dropdown[0], 
        clearable=True,  
    ),

    dash_table.DataTable(
        id='data-table',
        data=df[columns_to_display].to_dict('records'),
        columns=[{'name': col, 'id': col} for col in columns_to_display],
        style_table={'height': '400px', 'overflowY': 'auto'},
        style_cell={'minWidth': '150px', 'width': '150px', 'maxWidth': '150px'},
        style_header={'fontWeight': 'bold', 'backgroundColor': 'lightgrey'},
    )
])

@app.callback(
    [Output('data-table', 'data'),
     Output('column-dropdown', 'options')],
    Input('column-dropdown', 'value')
)
def update_table(selected_columns):
    if not selected_columns:
        # Si no se ha seleccionado ninguna columna, muestra todas las filas
        return df[columns_to_display].to_dict('records')

    filtered_df = df[df[selected_columns[0]] == selected_columns[0]] 

    if len(selected_columns) > 1:
        for column in selected_columns[1:]:
            filtered_df = filtered_df[filtered_df[column] == 'value']

    return filtered_df[columns_to_display].to_dict('records')

if __name__ == '__main__':
    app.run_server(debug=True)
